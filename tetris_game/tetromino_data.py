# Define the official guideline colors for each tetromino
COLORS = {
    'I': (0, 255, 255),     # I - Cyan
    'O': (255, 255, 0),     # O - Yellow
    'T': (128, 0, 128),     # T - Purple
    'S': (0, 255, 0),       # S - Green
    'Z': (255, 0, 0),       # Z - Red
    'J': (0, 0, 255),       # J - Blue
    'L': (255, 165, 0)      # L - Orange
}

# Define the shapes of each tetromino and their associated rotations
SHAPES = {
    'I': [
        [
            [0, 0, 0, 0],
            [1, 1, 1, 1],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ],
        [
            [0, 0, 1, 0],
            [0, 0, 1, 0],
            [0, 0, 1, 0],
            [0, 0, 1, 0]
        ],
        [
            [0, 0, 0, 0],
            [1, 1, 1, 1],
            [0, 0, 0, 0],
            [0, 0, 0, 0]
        ],
        [
            [0, 1, 0, 0],
            [0, 1, 0, 0],
            [0, 1, 0, 0],
            [0, 1, 0, 0]
        ]
    ],
    'O': [
        [
            [1, 1],
            [1, 1]
        ],
        [
            [1, 1],
            [1, 1]
        ],
        [
            [1, 1],
            [1, 1]
        ],
        [
            [1, 1],
            [1, 1]
        ]
    ],
    'T': [
        [
            [0, 1, 0],
            [1, 1, 1],
            [0, 0, 0]
        ],
        [
            [0, 1, 0],
            [0, 1, 1],
            [0, 1, 0]
        ],
        [
            [0, 0, 0],
            [1, 1, 1],
            [0, 1, 0]
        ],
        [
            [0, 1, 0],
            [1, 1, 0],
            [0, 1, 0]
        ]
    ],
    'S': [
        [
            [0, 1, 1],
            [1, 1, 0],
            [0, 0, 0]
        ],
        [
            [0, 1, 0],
            [0, 1, 1],
            [0, 0, 1]
        ],
        [
            [0, 0, 0],
            [0, 1, 1],
            [1, 1, 0]
        ],
        [
            [1, 0, 0],
            [1, 1, 0],
            [0, 1, 0]
        ]
    ],
    'Z': [
        [
            [1, 1, 0],
            [0, 1, 1],
            [0, 0, 0]
        ],
        [
            [0, 0, 1],
            [0, 1, 1],
            [0, 1, 0]
        ],
        [
            [0, 0, 0],
            [1, 1, 0],
            [0, 1, 1]
        ],
        [
            [0, 1, 0],
            [1, 1, 0],
            [1, 0, 0]
        ]
    ],
    'J': [
        [
            [1, 0, 0],
            [1, 1, 1],
            [0, 0, 0]
        ],
        [
            [0, 1, 1],
            [0, 1, 0],
            [0, 1, 0]
        ],
        [
            [0, 0, 0],
            [1, 1, 1],
            [0, 0, 1]
        ],
        [
            [0, 1, 0],
            [0, 1, 0],
            [1, 1, 0]
        ]
    ],
    'L': [
        [
            [0, 0, 1],
            [1, 1, 1],
            [0, 0, 0]
        ],
        [
            [0, 1, 0],
            [0, 1, 0],
            [0, 1, 1]
        ],
        [
            [0, 0, 0],
            [1, 1, 1],
            [1, 0, 0]
        ],
        [
            [1, 1, 0],
            [0, 1, 0],
            [0, 1, 0]
        ]
    ]
}

# Wall kick data for J, L, S, T, Z pieces (0, 1, 2, 3 represent rotation states)
WALLKICKS = {
    "0-1": [(0, 0), (-1, 0), (-1, 1), (0, -2), (-1, -2)],
    "1-0": [(0, 0), (1, 0), (1, -1), (0, 2), (1, 2)],
    "1-2": [(0, 0), (1, 0), (1, -1), (0, 2), (1, 2)],
    "2-1": [(0, 0), (-1, 0), (-1, 1), (0, -2), (-1, -2)],
    "2-3": [(0, 0), (1, 0), (1, 1), (0, -2), (1, -2)],
    "3-2": [(0, 0), (-1, 0), (-1, -1), (0, 2), (-1, 2)],
    "3-0": [(0, 0), (-1, 0), (-1, -1), (0, 2), (-1, 2)],
    "0-3": [(0, 0), (1, 0), (1, 1), (0, -2), (1, -2)]
}

# Wall kick data for I piece (has its own kicks due to its length)
I_WALLKICKS = {
    "0-1": [(0, 0), (-2, 0), (1, 0), (-2, -1), (1, 2)],
    "1-0": [(0, 0), (2, 0), (-1, 0), (2, 1), (-1, -2)],
    "1-2": [(0, 0), (-1, 0), (2, 0), (-1, 2), (2, -1)],
    "2-1": [(0, 0), (1, 0), (-2, 0), (1, -2), (-2, 1)],
    "2-3": [(0, 0), (2, 0), (-1, 0), (2, 1), (-1, -2)],
    "3-2": [(0, 0), (-2, 0), (1, 0), (-2, -1), (1, 2)],
    "3-0": [(0, 0), (1, 0), (2, 0), (1, -2), (2, -1)],
    "0-3": [(0, 0), (-1, 0), (2, 0), (-1, 2), (2, -1)]
}

# Wall kick data for O piece, using the specified offsets (O piece does not traditionally rotate, but for consistency)
O_WALLKICKS = {
    "0-1": [(0, 0), (-1, 0), (-2, 0), (-1, 1), (0, 0)],
    "1-2": [(0, 0), (-1, 1), (-1, 1), (-1, 3), (-1, -1)],
    "2-3": [(0, 0), (0, 1), (1, 1), (0, 2), (-1, 1)],
    "3-0": [(0, 0), (0, 0), (0, 0), (0, 0), (0, 0)],
    "1-0": [(0, 0), (1, 0), (2, 0), (1, -1), (0, -1)],
    "2-1": [(0, 0), (1, -1), (1, -1), (1, -3), (1, 1)],
    "3-2": [(0, 0), (0, -1), (-1, -1), (0, -2), (1, -1)],
    "0-3": [(0, 0), (0, 0), (0, 0), (0, 0), (0, 0)]
}
